filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
mdat <- matrix(list(i, id, Sum), nrow = length(id), ncol = 3, byrow = TRUE)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
mdat <- matrix(c(i, id, Sum), nrow = length(id), ncol = 3, byrow = TRUE)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
mdat <- matrix(c(i, id, Sum), ncol = 3)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
i <- 1:5
id <- c(2,4,8,10,12)
Sum <- c(1041,474,192,148,96)
data <- list(i,id,sum)
data
data <- c(i,id,sum)
data
data <- i,id,Sum
data <- c(i,id,Sum)
data
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
mdat <- matrix(data = c(i, id, Sum), ncol = 3)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
data <- c(i, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
i
id
Sum
data <- c(i, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
line <- sprintf("## %d %d %d", i, id[i], Sum[i])
print(line)
print(1)
print(id)
print(Sum)
data <- c(i, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
# line <- sprintf("## %d %d %d", i, id[i], Sum[i])
}
data <- c(i, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
# line <- sprintf("## %d %d %d", i, id[i], Sum[i])
}
data <- c(id, Sum)
mdat <- matrix(data, ncol = 2)
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, nid, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum,r <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3)
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
row_names <- NULL
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
row_names <- "##"
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
row_names[i] <- "##"
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
# read data from all files using read.csv function
# print("##   id nobs")
Sum <- 0
r <- 0
row_names <- 0
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r[i] <- i
row_names[i] <- "##"
}
data <- c(r, id, Sum)
mdat <- matrix(data, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1)
complete("specdata", 30:25)
complete("specdata", 3)
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
Sum <- 0
r_no <- 0
row_names <- 0
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
Sum[i] <- sum(complete.cases(dataset))
r_no[i] <- i
row_names[i] <- "##"
}
mdata <- c(r_no, id, Sum)
mdat <- matrix(mdata, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", 30:25)
complete <- function(directory, id) {
filenames <- sprintf("./%s/%03d.csv", directory, id)
nobs <- 0
r_no <- 0
row_names <- 0
col_names <- c("  ", "id", "nobs")
for (i in 1:length(id)) {
dataset <- read.csv(filenames[i])
nobs[i] <- sum(complete.cases(dataset))
r_no[i] <- i
row_names[i] <- "##"
}
mdata <- c(r_no, id, nobs)
mdat <- matrix(mdata, ncol = 3, dimnames = list(row_names, col_names))
mdat
}
complete("specdata", 30:25)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
x
z<- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
R.version.string
install.packages("swirl")
library()
swirl()
Q
q()
m <- matrix(1:6, 2,3)
m
solve(m)
m <- matrix(1:9, 3 ,3)
m
solve(m)
try(m)
m
gwtwd()
getwd()
setwd("C:/Users/Bagadi/GitHub/ProgrammingAssignment2")
setwd("C:\Users\Bagadi\GitHub\ProgrammingAssignment2")
getwd()
getwd()
getwd()
getwd()
setwd("C:C:/Users/Bagadi/Documents/GitHub/ProgrammingAssignment2")
setwd("C:/Users/Bagadi/Documents/GitHub/ProgrammingAssignment2")
getwd()
ls()
dir()
list.files()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
}
getwd()
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8)
h8
sh8 <- solve(h8)
sh8
round(sh8 %*% h8, 3)
A <- hilbert(4)
A
try(solve(A))
A %*% solve(A)
round(A %*% solve(A), 3)
makeCacheMatrix <- function(x = matrix()) {
# inv will store the cached inverse matrix
inv <- NULL
# Setter for the matrix
set <- function(y) {
x <<- y
inv <<- NULL
}
# Getter for the matrix
get <- function() x
# Setter for the inverse
setinv <- function(inverse) inv <<- inverse
# Getter for the inverse
getinv <- function() inv
# Return the matrix with our newly defined functions
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
# cacheSolve: Compute the inverse of the matrix. If the inv variable is already
# exist's in the environment, then return the inv from cached variable.
cacheSolve <- function(x, ...) {
inv <- x$getinv()
# If the variable inv is already calculated, return it
if (!is.null(inv)) {
message("getting cached data")
return(inv)
}
# The inv not found in the enviroment and calculate it using the solve()
data <- x$get()
inv <- solve(data, ...)
# Cache the inv varaible
x$setinv(inv)
# Return the value of inv
inv
}
x <- matrix(rnorm(9), nrow = 3)
x
cx <- makeCacheMatrix(x)
cx$get()
cacheSolve(cx)
cacheSolve(cx)
matrix <- matrix(rnorm(9), nrow = 3)
c_inv_m <- makeCacheMatrix(matrix)
c_inv_m$get()
cacheSolve(c_inv_m)
cacheSolve(c_inv_m)
m <- c_inv_m$get()
inv_m <- cacheSolve(c_inv_m)
inv_m1 <- cacheSolve(c_inv_m)
round(inv_m %*% m, 3)
matrix <- matrix(1:16, nrow = 4)
matrix
c_inv_m <- makeCacheMatrix(matrix)
c_inv_m
try(c_inv_m)
str(c_inv_m)
m <- c_inv_m$get()
m
inv_m <- cacheSolve(c_inv_m)
inv_m1 <- cacheSolve(c_inv_m)
matrix <- matrix(rnorm(9))
matrix
matrix <- matrix(rnorm(9), 3, 3)
matrix
c_inv_m <- makeCacheMatrix(matrix
)
m <- c_inv_m$get()
m
inv_m <- cacheSolve(c_inv_m)
inv_m
inv_m1 <- cacheSolve(c_inv_m)
round(inv_m %*% m, 3)
